// регистрируем плагины, чтобы они работали на разных framework без проблем

gsap.registerPlugin(ScrollTrigger, ScrollSmoother) 
//ScrollTrigger отвечает за то, чтобы в процессе скролла мы могли манипулировать элементами, находящимися на экране.
//ScrollSmoother - это плагин для плавного скролла.

// работа с hero-section (исчезание картинки и заголовка)
//создаем условие, чтобы сама операционная система решал для плавного скролла (ноут, планшет, мобилка)
if (ScrollTrigger.isTouch !==1) { //!==1 - это не равно 1, т.е. если мы скроллим не на устройствах с touch
	
	//настройка прокрутки
	ScrollSmoother.create({
		wrapper: '.wrapper',
		content: '.content',
		smooth: 1.5,
		effects: true
	})

	// работа с hero-section (исчезание картинки и заголовка)
	//fromTo определяет: начальную точку from движения объекта в процессе анимации, и конечную точку to. 
	// В скобках('.class') определяем, к какому объекту обращаемся. 
	// первые {} - значение до/от анимации
  // вторые {} - значение к
	gsap.fromTo('.hero-section', { opacity: 1 }, {
		opacity: 0,
		scrollTrigger: {
			trigger: '.hero-section', //определим элемент триггера. Когда он в поле зрения, тогда происходят следующие события
			start: 'center', //будем начинать анимацию, когда элемент находится в центре. На этой строке кода элемент будет исчезать и не появляться обратно))

			scrub: true, //возвращаем предыдущие значения, т.е. элемент появляется снова

			end: '820' // (top / bottom. bottom, например, это когда экран при прокрутке вниз доходит до НИЖНЕГО края блока '.hero-section'), где находится элемент, когда мы совершили действие
		}
	})


	//работа с элементами галлереи.
	// создаём цикл, чтобы применилось к каждому элементу, а не общей колонке
	// левая галлерея

	const itemsL = gsap.utils.toArray('.gallery__left .gallery__item')

	itemsL.forEach(item => {
		gsap.fromTo(item, { x: -50, opacity: 0 }, { // первые { x: -50 --, opacity: 0 } это ось х, создаём появление элементов слева } - значение до/от анимации
			opacity: 1, x: 0,
			scrollTrigger: {
				trigger: item,
				start: '-850',
				end: '-100',
				scrub: true //возвращение значения
			}
		})
	})

	// правая галлерея
	const itemsR = gsap.utils.toArray('.gallery__right .gallery__item')

	itemsR.forEach(item => {
		gsap.fromTo(item, { x: 50, opacity: 0 }, { // первые { x: 50 --, opacity: 0 } это ось х, создаём появление элементов справа } - значение до/от анимации
			opacity: 1, x: 0,
			scrollTrigger: {
				trigger: item,
				start: '-850',
				end: '-100',
				scrub: true //возвращение значения
			}
		})
	})
}

